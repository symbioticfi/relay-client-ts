// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file v1/api.proto (package api.proto.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/api.proto.
 */
export const file_v1_api: GenFile = /*@__PURE__*/
  fileDesc("", [file_google_protobuf_timestamp]);

/**
 * Request message for signing a message
 *
 * @generated from message api.proto.v1.SignMessageRequest
 */
export type SignMessageRequest = Message<"api.proto.v1.SignMessageRequest"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 key_tag = 1;
   */
  keyTag: number;

  /**
   * Message to be signed
   *
   * @generated from field: bytes message = 2;
   */
  message: Uint8Array;

  /**
   * Required epoch (optional, if not provided latest committed epoch will be used)
   *
   * @generated from field: optional uint64 required_epoch = 3;
   */
  requiredEpoch?: bigint;
};

/**
 * Describes the message api.proto.v1.SignMessageRequest.
 * Use `create(SignMessageRequestSchema)` to create a new message.
 */
export const SignMessageRequestSchema: GenMessage<SignMessageRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 0);

/**
 * Response message for sign message request
 *
 * @generated from message api.proto.v1.SignMessageResponse
 */
export type SignMessageResponse = Message<"api.proto.v1.SignMessageResponse"> & {
  /**
   * Hash of the signature request
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 2;
   */
  epoch: bigint;
};

/**
 * Describes the message api.proto.v1.SignMessageResponse.
 * Use `create(SignMessageResponseSchema)` to create a new message.
 */
export const SignMessageResponseSchema: GenMessage<SignMessageResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 1);

/**
 * Request message for listening to signatures stream
 *
 * @generated from message api.proto.v1.ListenSignaturesRequest
 */
export type ListenSignaturesRequest = Message<"api.proto.v1.ListenSignaturesRequest"> & {
  /**
   * Optional: start epoch. If provided, stream will first send all historical signatures starting from this epoch, then continue with real-time updates
   * If not provided, only signatures generated after stream creation will be sent
   *
   * @generated from field: optional uint64 start_epoch = 1;
   */
  startEpoch?: bigint;
};

/**
 * Describes the message api.proto.v1.ListenSignaturesRequest.
 * Use `create(ListenSignaturesRequestSchema)` to create a new message.
 */
export const ListenSignaturesRequestSchema: GenMessage<ListenSignaturesRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 2);

/**
 * Response message for signatures stream
 *
 * @generated from message api.proto.v1.ListenSignaturesResponse
 */
export type ListenSignaturesResponse = Message<"api.proto.v1.ListenSignaturesResponse"> & {
  /**
   * Id of the signature request
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 2;
   */
  epoch: bigint;

  /**
   * Signature data
   *
   * @generated from field: api.proto.v1.Signature signature = 3;
   */
  signature?: Signature;
};

/**
 * Describes the message api.proto.v1.ListenSignaturesResponse.
 * Use `create(ListenSignaturesResponseSchema)` to create a new message.
 */
export const ListenSignaturesResponseSchema: GenMessage<ListenSignaturesResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 3);

/**
 * Request message for listening to aggregation proofs stream
 *
 * @generated from message api.proto.v1.ListenProofsRequest
 */
export type ListenProofsRequest = Message<"api.proto.v1.ListenProofsRequest"> & {
  /**
   * Optional: start epoch. If provided, stream will first send all historical proofs starting from this epoch, then continue with real-time updates
   * If not provided, only proofs generated after stream creation will be sent
   *
   * @generated from field: optional uint64 start_epoch = 1;
   */
  startEpoch?: bigint;
};

/**
 * Describes the message api.proto.v1.ListenProofsRequest.
 * Use `create(ListenProofsRequestSchema)` to create a new message.
 */
export const ListenProofsRequestSchema: GenMessage<ListenProofsRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 4);

/**
 * Response message for aggregation proofs stream
 *
 * @generated from message api.proto.v1.ListenProofsResponse
 */
export type ListenProofsResponse = Message<"api.proto.v1.ListenProofsResponse"> & {
  /**
   * Id of the request
   *
   * @generated from field: string request_id = 1;
   */
  requestId: string;

  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 2;
   */
  epoch: bigint;

  /**
   * Final aggregation proof
   *
   * @generated from field: api.proto.v1.AggregationProof aggregation_proof = 3;
   */
  aggregationProof?: AggregationProof;
};

/**
 * Describes the message api.proto.v1.ListenProofsResponse.
 * Use `create(ListenProofsResponseSchema)` to create a new message.
 */
export const ListenProofsResponseSchema: GenMessage<ListenProofsResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 5);

/**
 * Request message for listening to validator set changes stream
 *
 * @generated from message api.proto.v1.ListenValidatorSetRequest
 */
export type ListenValidatorSetRequest = Message<"api.proto.v1.ListenValidatorSetRequest"> & {
  /**
   * Optional: start epoch. If provided, stream will first send all historical validator sets starting from this epoch, then continue with real-time updates
   * If not provided, only validator sets generated after stream creation will be sent
   *
   * @generated from field: optional uint64 start_epoch = 1;
   */
  startEpoch?: bigint;
};

/**
 * Describes the message api.proto.v1.ListenValidatorSetRequest.
 * Use `create(ListenValidatorSetRequestSchema)` to create a new message.
 */
export const ListenValidatorSetRequestSchema: GenMessage<ListenValidatorSetRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 6);

/**
 * Response message for validator set changes stream
 *
 * @generated from message api.proto.v1.ListenValidatorSetResponse
 */
export type ListenValidatorSetResponse = Message<"api.proto.v1.ListenValidatorSetResponse"> & {
  /**
   * The validator set
   *
   * @generated from field: api.proto.v1.ValidatorSet validator_set = 1;
   */
  validatorSet?: ValidatorSet;
};

/**
 * Describes the message api.proto.v1.ListenValidatorSetResponse.
 * Use `create(ListenValidatorSetResponseSchema)` to create a new message.
 */
export const ListenValidatorSetResponseSchema: GenMessage<ListenValidatorSetResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 7);

/**
 * Request message for getting aggregation proof
 *
 * @generated from message api.proto.v1.GetAggregationProofRequest
 */
export type GetAggregationProofRequest = Message<"api.proto.v1.GetAggregationProofRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;
};

/**
 * Describes the message api.proto.v1.GetAggregationProofRequest.
 * Use `create(GetAggregationProofRequestSchema)` to create a new message.
 */
export const GetAggregationProofRequestSchema: GenMessage<GetAggregationProofRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 8);

/**
 * Request message for getting aggregation proof
 *
 * @generated from message api.proto.v1.GetAggregationProofsByEpochRequest
 */
export type GetAggregationProofsByEpochRequest = Message<"api.proto.v1.GetAggregationProofsByEpochRequest"> & {
  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 1;
   */
  epoch: bigint;
};

/**
 * Describes the message api.proto.v1.GetAggregationProofsByEpochRequest.
 * Use `create(GetAggregationProofsByEpochRequestSchema)` to create a new message.
 */
export const GetAggregationProofsByEpochRequestSchema: GenMessage<GetAggregationProofsByEpochRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 9);

/**
 * Request message for getting current epoch
 *
 * @generated from message api.proto.v1.GetCurrentEpochRequest
 */
export type GetCurrentEpochRequest = Message<"api.proto.v1.GetCurrentEpochRequest"> & {
};

/**
 * Describes the message api.proto.v1.GetCurrentEpochRequest.
 * Use `create(GetCurrentEpochRequestSchema)` to create a new message.
 */
export const GetCurrentEpochRequestSchema: GenMessage<GetCurrentEpochRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 10);

/**
 * Request message for getting signatures
 *
 * @generated from message api.proto.v1.GetSignaturesRequest
 */
export type GetSignaturesRequest = Message<"api.proto.v1.GetSignaturesRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;
};

/**
 * Describes the message api.proto.v1.GetSignaturesRequest.
 * Use `create(GetSignaturesRequestSchema)` to create a new message.
 */
export const GetSignaturesRequestSchema: GenMessage<GetSignaturesRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 11);

/**
 * Request message for getting signatures by epoch
 *
 * @generated from message api.proto.v1.GetSignaturesByEpochRequest
 */
export type GetSignaturesByEpochRequest = Message<"api.proto.v1.GetSignaturesByEpochRequest"> & {
  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 1;
   */
  epoch: bigint;
};

/**
 * Describes the message api.proto.v1.GetSignaturesByEpochRequest.
 * Use `create(GetSignaturesByEpochRequestSchema)` to create a new message.
 */
export const GetSignaturesByEpochRequestSchema: GenMessage<GetSignaturesByEpochRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 12);

/**
 * Response message for getting signatures
 *
 * @generated from message api.proto.v1.GetSignaturesResponse
 */
export type GetSignaturesResponse = Message<"api.proto.v1.GetSignaturesResponse"> & {
  /**
   * List of signatures
   *
   * @generated from field: repeated api.proto.v1.Signature signatures = 1;
   */
  signatures: Signature[];
};

/**
 * Describes the message api.proto.v1.GetSignaturesResponse.
 * Use `create(GetSignaturesResponseSchema)` to create a new message.
 */
export const GetSignaturesResponseSchema: GenMessage<GetSignaturesResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 13);

/**
 * Response message for getting signatures by epoch
 *
 * @generated from message api.proto.v1.GetSignaturesByEpochResponse
 */
export type GetSignaturesByEpochResponse = Message<"api.proto.v1.GetSignaturesByEpochResponse"> & {
  /**
   * List of signatures
   *
   * @generated from field: repeated api.proto.v1.Signature signatures = 1;
   */
  signatures: Signature[];
};

/**
 * Describes the message api.proto.v1.GetSignaturesByEpochResponse.
 * Use `create(GetSignaturesByEpochResponseSchema)` to create a new message.
 */
export const GetSignaturesByEpochResponseSchema: GenMessage<GetSignaturesByEpochResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 14);

/**
 * Request message for getting signature request
 *
 * @generated from message api.proto.v1.GetSignatureRequestRequest
 */
export type GetSignatureRequestRequest = Message<"api.proto.v1.GetSignatureRequestRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;
};

/**
 * Describes the message api.proto.v1.GetSignatureRequestRequest.
 * Use `create(GetSignatureRequestRequestSchema)` to create a new message.
 */
export const GetSignatureRequestRequestSchema: GenMessage<GetSignatureRequestRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 15);

/**
 * Request message for getting aggregation status
 *
 * @generated from message api.proto.v1.GetAggregationStatusRequest
 */
export type GetAggregationStatusRequest = Message<"api.proto.v1.GetAggregationStatusRequest"> & {
  /**
   * @generated from field: string request_id = 1;
   */
  requestId: string;
};

/**
 * Describes the message api.proto.v1.GetAggregationStatusRequest.
 * Use `create(GetAggregationStatusRequestSchema)` to create a new message.
 */
export const GetAggregationStatusRequestSchema: GenMessage<GetAggregationStatusRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 16);

/**
 * Request message for getting validator set
 *
 * @generated from message api.proto.v1.GetValidatorSetRequest
 */
export type GetValidatorSetRequest = Message<"api.proto.v1.GetValidatorSetRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetRequest.
 * Use `create(GetValidatorSetRequestSchema)` to create a new message.
 */
export const GetValidatorSetRequestSchema: GenMessage<GetValidatorSetRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 17);

/**
 * Request message for getting validator by address
 *
 * @generated from message api.proto.v1.GetValidatorByAddressRequest
 */
export type GetValidatorByAddressRequest = Message<"api.proto.v1.GetValidatorByAddressRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;

  /**
   * Validator address (required)
   *
   * @generated from field: string address = 2;
   */
  address: string;
};

/**
 * Describes the message api.proto.v1.GetValidatorByAddressRequest.
 * Use `create(GetValidatorByAddressRequestSchema)` to create a new message.
 */
export const GetValidatorByAddressRequestSchema: GenMessage<GetValidatorByAddressRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 18);

/**
 * Request message for getting validator by key
 *
 * @generated from message api.proto.v1.GetValidatorByKeyRequest
 */
export type GetValidatorByKeyRequest = Message<"api.proto.v1.GetValidatorByKeyRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;

  /**
   * Validator key tag (required)
   *
   * @generated from field: uint32 key_tag = 2;
   */
  keyTag: number;

  /**
   * Validator on chain (public) key (required)
   *
   * @generated from field: bytes on_chain_key = 3;
   */
  onChainKey: Uint8Array;
};

/**
 * Describes the message api.proto.v1.GetValidatorByKeyRequest.
 * Use `create(GetValidatorByKeyRequestSchema)` to create a new message.
 */
export const GetValidatorByKeyRequestSchema: GenMessage<GetValidatorByKeyRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 19);

/**
 * Request message for getting local validator
 *
 * @generated from message api.proto.v1.GetLocalValidatorRequest
 */
export type GetLocalValidatorRequest = Message<"api.proto.v1.GetLocalValidatorRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;
};

/**
 * Describes the message api.proto.v1.GetLocalValidatorRequest.
 * Use `create(GetLocalValidatorRequestSchema)` to create a new message.
 */
export const GetLocalValidatorRequestSchema: GenMessage<GetLocalValidatorRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 20);

/**
 * Request message for getting validator set header
 *
 * @generated from message api.proto.v1.GetValidatorSetHeaderRequest
 */
export type GetValidatorSetHeaderRequest = Message<"api.proto.v1.GetValidatorSetHeaderRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetHeaderRequest.
 * Use `create(GetValidatorSetHeaderRequestSchema)` to create a new message.
 */
export const GetValidatorSetHeaderRequestSchema: GenMessage<GetValidatorSetHeaderRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 21);

/**
 * Request message for getting validator set metadata
 *
 * @generated from message api.proto.v1.GetValidatorSetMetadataRequest
 */
export type GetValidatorSetMetadataRequest = Message<"api.proto.v1.GetValidatorSetMetadataRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetMetadataRequest.
 * Use `create(GetValidatorSetMetadataRequestSchema)` to create a new message.
 */
export const GetValidatorSetMetadataRequestSchema: GenMessage<GetValidatorSetMetadataRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 22);

/**
 * Response message for getting current epoch
 *
 * @generated from message api.proto.v1.GetCurrentEpochResponse
 */
export type GetCurrentEpochResponse = Message<"api.proto.v1.GetCurrentEpochResponse"> & {
  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 1;
   */
  epoch: bigint;

  /**
   * Epoch start time
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message api.proto.v1.GetCurrentEpochResponse.
 * Use `create(GetCurrentEpochResponseSchema)` to create a new message.
 */
export const GetCurrentEpochResponseSchema: GenMessage<GetCurrentEpochResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 23);

/**
 * Response message for getting signature request
 *
 * @generated from message api.proto.v1.GetSignatureRequestResponse
 */
export type GetSignatureRequestResponse = Message<"api.proto.v1.GetSignatureRequestResponse"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 key_tag = 1;
   */
  keyTag: number;

  /**
   * Message to be signed
   *
   * @generated from field: bytes message = 2;
   */
  message: Uint8Array;

  /**
   * Required epoch
   *
   * @generated from field: uint64 required_epoch = 3;
   */
  requiredEpoch: bigint;
};

/**
 * Describes the message api.proto.v1.GetSignatureRequestResponse.
 * Use `create(GetSignatureRequestResponseSchema)` to create a new message.
 */
export const GetSignatureRequestResponseSchema: GenMessage<GetSignatureRequestResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 24);

/**
 * Response message for getting aggregation proof
 *
 * @generated from message api.proto.v1.GetAggregationProofResponse
 */
export type GetAggregationProofResponse = Message<"api.proto.v1.GetAggregationProofResponse"> & {
  /**
   * @generated from field: api.proto.v1.AggregationProof aggregation_proof = 1;
   */
  aggregationProof?: AggregationProof;
};

/**
 * Describes the message api.proto.v1.GetAggregationProofResponse.
 * Use `create(GetAggregationProofResponseSchema)` to create a new message.
 */
export const GetAggregationProofResponseSchema: GenMessage<GetAggregationProofResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 25);

/**
 * Response message for getting aggregation proof
 *
 * @generated from message api.proto.v1.GetAggregationProofsByEpochResponse
 */
export type GetAggregationProofsByEpochResponse = Message<"api.proto.v1.GetAggregationProofsByEpochResponse"> & {
  /**
   * @generated from field: repeated api.proto.v1.AggregationProof aggregation_proofs = 1;
   */
  aggregationProofs: AggregationProof[];
};

/**
 * Describes the message api.proto.v1.GetAggregationProofsByEpochResponse.
 * Use `create(GetAggregationProofsByEpochResponseSchema)` to create a new message.
 */
export const GetAggregationProofsByEpochResponseSchema: GenMessage<GetAggregationProofsByEpochResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 26);

/**
 * Response message for getting aggregation proof
 *
 * @generated from message api.proto.v1.AggregationProof
 */
export type AggregationProof = Message<"api.proto.v1.AggregationProof"> & {
  /**
   * Message hash
   *
   * @generated from field: bytes message_hash = 2;
   */
  messageHash: Uint8Array;

  /**
   * Proof data
   *
   * @generated from field: bytes proof = 3;
   */
  proof: Uint8Array;
};

/**
 * Describes the message api.proto.v1.AggregationProof.
 * Use `create(AggregationProofSchema)` to create a new message.
 */
export const AggregationProofSchema: GenMessage<AggregationProof> = /*@__PURE__*/
  messageDesc(file_v1_api, 27);

/**
 * Response message for getting aggregation status
 *
 * @generated from message api.proto.v1.GetAggregationStatusResponse
 */
export type GetAggregationStatusResponse = Message<"api.proto.v1.GetAggregationStatusResponse"> & {
  /**
   * Current voting power of the aggregator (big integer as string)
   *
   * @generated from field: string current_voting_power = 1;
   */
  currentVotingPower: string;

  /**
   * List of operator addresses that signed the request
   *
   * @generated from field: repeated string signer_operators = 2;
   */
  signerOperators: string[];
};

/**
 * Describes the message api.proto.v1.GetAggregationStatusResponse.
 * Use `create(GetAggregationStatusResponseSchema)` to create a new message.
 */
export const GetAggregationStatusResponseSchema: GenMessage<GetAggregationStatusResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 28);

/**
 * Digital signature
 *
 * @generated from message api.proto.v1.Signature
 */
export type Signature = Message<"api.proto.v1.Signature"> & {
  /**
   * Signature data
   *
   * @generated from field: bytes signature = 1;
   */
  signature: Uint8Array;

  /**
   * Message hash
   *
   * @generated from field: bytes message_hash = 2;
   */
  messageHash: Uint8Array;

  /**
   * Public key
   *
   * @generated from field: bytes public_key = 3;
   */
  publicKey: Uint8Array;
};

/**
 * Describes the message api.proto.v1.Signature.
 * Use `create(SignatureSchema)` to create a new message.
 */
export const SignatureSchema: GenMessage<Signature> = /*@__PURE__*/
  messageDesc(file_v1_api, 29);

/**
 * Response message for getting validator set
 *
 * @generated from message api.proto.v1.GetValidatorSetResponse
 */
export type GetValidatorSetResponse = Message<"api.proto.v1.GetValidatorSetResponse"> & {
  /**
   * The validator set
   *
   * @generated from field: api.proto.v1.ValidatorSet validator_set = 1;
   */
  validatorSet?: ValidatorSet;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetResponse.
 * Use `create(GetValidatorSetResponseSchema)` to create a new message.
 */
export const GetValidatorSetResponseSchema: GenMessage<GetValidatorSetResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 30);

/**
 * Response message for getting validator by address
 *
 * @generated from message api.proto.v1.GetValidatorByAddressResponse
 */
export type GetValidatorByAddressResponse = Message<"api.proto.v1.GetValidatorByAddressResponse"> & {
  /**
   * The validator
   *
   * @generated from field: api.proto.v1.Validator validator = 1;
   */
  validator?: Validator;
};

/**
 * Describes the message api.proto.v1.GetValidatorByAddressResponse.
 * Use `create(GetValidatorByAddressResponseSchema)` to create a new message.
 */
export const GetValidatorByAddressResponseSchema: GenMessage<GetValidatorByAddressResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 31);

/**
 * Response message for getting validator by key
 *
 * @generated from message api.proto.v1.GetValidatorByKeyResponse
 */
export type GetValidatorByKeyResponse = Message<"api.proto.v1.GetValidatorByKeyResponse"> & {
  /**
   * The validator
   *
   * @generated from field: api.proto.v1.Validator validator = 1;
   */
  validator?: Validator;
};

/**
 * Describes the message api.proto.v1.GetValidatorByKeyResponse.
 * Use `create(GetValidatorByKeyResponseSchema)` to create a new message.
 */
export const GetValidatorByKeyResponseSchema: GenMessage<GetValidatorByKeyResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 32);

/**
 * Response message for getting local validator
 *
 * @generated from message api.proto.v1.GetLocalValidatorResponse
 */
export type GetLocalValidatorResponse = Message<"api.proto.v1.GetLocalValidatorResponse"> & {
  /**
   * The validator
   *
   * @generated from field: api.proto.v1.Validator validator = 1;
   */
  validator?: Validator;
};

/**
 * Describes the message api.proto.v1.GetLocalValidatorResponse.
 * Use `create(GetLocalValidatorResponseSchema)` to create a new message.
 */
export const GetLocalValidatorResponseSchema: GenMessage<GetLocalValidatorResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 33);

/**
 * @generated from message api.proto.v1.ExtraData
 */
export type ExtraData = Message<"api.proto.v1.ExtraData"> & {
  /**
   * @generated from field: bytes key = 1;
   */
  key: Uint8Array;

  /**
   * @generated from field: bytes value = 2;
   */
  value: Uint8Array;
};

/**
 * Describes the message api.proto.v1.ExtraData.
 * Use `create(ExtraDataSchema)` to create a new message.
 */
export const ExtraDataSchema: GenMessage<ExtraData> = /*@__PURE__*/
  messageDesc(file_v1_api, 34);

/**
 * Response message for getting validator set header
 *
 * @generated from message api.proto.v1.GetValidatorSetMetadataResponse
 */
export type GetValidatorSetMetadataResponse = Message<"api.proto.v1.GetValidatorSetMetadataResponse"> & {
  /**
   * @generated from field: repeated api.proto.v1.ExtraData extra_data = 1;
   */
  extraData: ExtraData[];

  /**
   * @generated from field: bytes commitment_data = 2;
   */
  commitmentData: Uint8Array;

  /**
   * @generated from field: string request_id = 3;
   */
  requestId: string;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetMetadataResponse.
 * Use `create(GetValidatorSetMetadataResponseSchema)` to create a new message.
 */
export const GetValidatorSetMetadataResponseSchema: GenMessage<GetValidatorSetMetadataResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 35);

/**
 * Response message for getting validator set header
 *
 * @generated from message api.proto.v1.GetValidatorSetHeaderResponse
 */
export type GetValidatorSetHeaderResponse = Message<"api.proto.v1.GetValidatorSetHeaderResponse"> & {
  /**
   * Version of the validator set
   *
   * @generated from field: uint32 version = 1;
   */
  version: number;

  /**
   * Key tag required to commit next validator set
   *
   * @generated from field: uint32 required_key_tag = 2;
   */
  requiredKeyTag: number;

  /**
   * Validator set epoch
   *
   * @generated from field: uint64 epoch = 3;
   */
  epoch: bigint;

  /**
   * Epoch capture timestamp
   *
   * @generated from field: google.protobuf.Timestamp capture_timestamp = 4;
   */
  captureTimestamp?: Timestamp;

  /**
   * Quorum threshold (big integer as string)
   *
   * @generated from field: string quorum_threshold = 5;
   */
  quorumThreshold: string;

  /**
   * Total voting power (big integer as string)
   *
   * @generated from field: string total_voting_power = 6;
   */
  totalVotingPower: string;

  /**
   * Validators SSZ Merkle root (hex string)
   *
   * @generated from field: string validators_ssz_mroot = 7;
   */
  validatorsSszMroot: string;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetHeaderResponse.
 * Use `create(GetValidatorSetHeaderResponseSchema)` to create a new message.
 */
export const GetValidatorSetHeaderResponseSchema: GenMessage<GetValidatorSetHeaderResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 36);

/**
 * Validator information
 *
 * @generated from message api.proto.v1.Validator
 */
export type Validator = Message<"api.proto.v1.Validator"> & {
  /**
   * Operator address (hex string)
   *
   * @generated from field: string operator = 1;
   */
  operator: string;

  /**
   * Voting power of the validator (big integer as string)
   *
   * @generated from field: string voting_power = 2;
   */
  votingPower: string;

  /**
   * Indicates if the validator is active
   *
   * @generated from field: bool is_active = 3;
   */
  isActive: boolean;

  /**
   * List of cryptographic keys
   *
   * @generated from field: repeated api.proto.v1.Key keys = 4;
   */
  keys: Key[];

  /**
   * List of validator vaults
   *
   * @generated from field: repeated api.proto.v1.ValidatorVault vaults = 5;
   */
  vaults: ValidatorVault[];
};

/**
 * Describes the message api.proto.v1.Validator.
 * Use `create(ValidatorSchema)` to create a new message.
 */
export const ValidatorSchema: GenMessage<Validator> = /*@__PURE__*/
  messageDesc(file_v1_api, 37);

/**
 * Cryptographic key
 *
 * @generated from message api.proto.v1.Key
 */
export type Key = Message<"api.proto.v1.Key"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 tag = 1;
   */
  tag: number;

  /**
   * Key payload
   *
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message api.proto.v1.Key.
 * Use `create(KeySchema)` to create a new message.
 */
export const KeySchema: GenMessage<Key> = /*@__PURE__*/
  messageDesc(file_v1_api, 38);

/**
 * Validator vault information
 *
 * @generated from message api.proto.v1.ValidatorVault
 */
export type ValidatorVault = Message<"api.proto.v1.ValidatorVault"> & {
  /**
   * Chain identifier
   *
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * Vault address
   *
   * @generated from field: string vault = 2;
   */
  vault: string;

  /**
   * Voting power for this vault (big integer as string)
   *
   * @generated from field: string voting_power = 3;
   */
  votingPower: string;
};

/**
 * Describes the message api.proto.v1.ValidatorVault.
 * Use `create(ValidatorVaultSchema)` to create a new message.
 */
export const ValidatorVaultSchema: GenMessage<ValidatorVault> = /*@__PURE__*/
  messageDesc(file_v1_api, 39);

/**
 * Request message for getting last committed epoch for a specific settlement chain
 *
 * @generated from message api.proto.v1.GetLastCommittedRequest
 */
export type GetLastCommittedRequest = Message<"api.proto.v1.GetLastCommittedRequest"> & {
  /**
   * Settlement chain ID
   *
   * @generated from field: uint64 settlement_chain_id = 1;
   */
  settlementChainId: bigint;
};

/**
 * Describes the message api.proto.v1.GetLastCommittedRequest.
 * Use `create(GetLastCommittedRequestSchema)` to create a new message.
 */
export const GetLastCommittedRequestSchema: GenMessage<GetLastCommittedRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 40);

/**
 * Response message for getting last committed epoch
 *
 * @generated from message api.proto.v1.GetLastCommittedResponse
 */
export type GetLastCommittedResponse = Message<"api.proto.v1.GetLastCommittedResponse"> & {
  /**
   * Settlement chain ID
   *
   * @generated from field: uint64 settlement_chain_id = 1;
   */
  settlementChainId: bigint;

  /**
   * @generated from field: api.proto.v1.ChainEpochInfo epoch_info = 2;
   */
  epochInfo?: ChainEpochInfo;
};

/**
 * Describes the message api.proto.v1.GetLastCommittedResponse.
 * Use `create(GetLastCommittedResponseSchema)` to create a new message.
 */
export const GetLastCommittedResponseSchema: GenMessage<GetLastCommittedResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 41);

/**
 * Request message for getting last committed epochs for all chains
 *
 * No parameters needed
 *
 * @generated from message api.proto.v1.GetLastAllCommittedRequest
 */
export type GetLastAllCommittedRequest = Message<"api.proto.v1.GetLastAllCommittedRequest"> & {
};

/**
 * Describes the message api.proto.v1.GetLastAllCommittedRequest.
 * Use `create(GetLastAllCommittedRequestSchema)` to create a new message.
 */
export const GetLastAllCommittedRequestSchema: GenMessage<GetLastAllCommittedRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 42);

/**
 * Response message for getting all last committed epochs
 *
 * @generated from message api.proto.v1.GetLastAllCommittedResponse
 */
export type GetLastAllCommittedResponse = Message<"api.proto.v1.GetLastAllCommittedResponse"> & {
  /**
   * List of settlement chains with their last committed epochs
   *
   * @generated from field: map<uint64, api.proto.v1.ChainEpochInfo> epoch_infos = 1;
   */
  epochInfos: { [key: string]: ChainEpochInfo };
};

/**
 * Describes the message api.proto.v1.GetLastAllCommittedResponse.
 * Use `create(GetLastAllCommittedResponseSchema)` to create a new message.
 */
export const GetLastAllCommittedResponseSchema: GenMessage<GetLastAllCommittedResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 43);

/**
 * Settlement chain with its last committed epoch
 *
 * @generated from message api.proto.v1.ChainEpochInfo
 */
export type ChainEpochInfo = Message<"api.proto.v1.ChainEpochInfo"> & {
  /**
   * Last committed epoch for this chain
   *
   * @generated from field: uint64 last_committed_epoch = 1;
   */
  lastCommittedEpoch: bigint;

  /**
   * Epoch start time
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message api.proto.v1.ChainEpochInfo.
 * Use `create(ChainEpochInfoSchema)` to create a new message.
 */
export const ChainEpochInfoSchema: GenMessage<ChainEpochInfo> = /*@__PURE__*/
  messageDesc(file_v1_api, 44);

/**
 * @generated from message api.proto.v1.ValidatorSet
 */
export type ValidatorSet = Message<"api.proto.v1.ValidatorSet"> & {
  /**
   * Version of the validator set
   *
   * @generated from field: uint32 version = 1;
   */
  version: number;

  /**
   * Key tag required to commit next validator set
   *
   * @generated from field: uint32 required_key_tag = 2;
   */
  requiredKeyTag: number;

  /**
   * Validator set epoch
   *
   * @generated from field: uint64 epoch = 3;
   */
  epoch: bigint;

  /**
   * Epoch capture timestamp
   *
   * @generated from field: google.protobuf.Timestamp capture_timestamp = 4;
   */
  captureTimestamp?: Timestamp;

  /**
   * Quorum threshold (big integer as string)
   *
   * @generated from field: string quorum_threshold = 5;
   */
  quorumThreshold: string;

  /**
   * Status of validator set header
   *
   * @generated from field: api.proto.v1.ValidatorSetStatus status = 6;
   */
  status: ValidatorSetStatus;

  /**
   * List of validators
   *
   * @generated from field: repeated api.proto.v1.Validator validators = 7;
   */
  validators: Validator[];
};

/**
 * Describes the message api.proto.v1.ValidatorSet.
 * Use `create(ValidatorSetSchema)` to create a new message.
 */
export const ValidatorSetSchema: GenMessage<ValidatorSet> = /*@__PURE__*/
  messageDesc(file_v1_api, 45);

/**
 * Validator set status enumeration
 *
 * @generated from enum api.proto.v1.ValidatorSetStatus
 */
export enum ValidatorSetStatus {
  /**
   * Default/unknown status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Derived status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_DERIVED = 1;
   */
  DERIVED = 1,

  /**
   * Aggregated status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_AGGREGATED = 2;
   */
  AGGREGATED = 2,

  /**
   * Committed status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_COMMITTED = 3;
   */
  COMMITTED = 3,

  /**
   * Missed status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_MISSED = 4;
   */
  MISSED = 4,
}

/**
 * Describes the enum api.proto.v1.ValidatorSetStatus.
 */
export const ValidatorSetStatusSchema: GenEnum<ValidatorSetStatus> = /*@__PURE__*/
  enumDesc(file_v1_api, 0);

/**
 * Signing process status enumeration
 *
 * @generated from enum api.proto.v1.SigningStatus
 */
export enum SigningStatus {
  /**
   * Default/unknown status
   *
   * @generated from enum value: SIGNING_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Request has been created and is waiting for signatures
   *
   * @generated from enum value: SIGNING_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * Signing process completed successfully with proof
   *
   * @generated from enum value: SIGNING_STATUS_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * Signing process failed
   *
   * @generated from enum value: SIGNING_STATUS_FAILED = 3;
   */
  FAILED = 3,

  /**
   * Signing request timed out
   *
   * @generated from enum value: SIGNING_STATUS_TIMEOUT = 4;
   */
  TIMEOUT = 4,
}

/**
 * Describes the enum api.proto.v1.SigningStatus.
 */
export const SigningStatusSchema: GenEnum<SigningStatus> = /*@__PURE__*/
  enumDesc(file_v1_api, 1);

/**
 * Error code enumeration
 *
 * @generated from enum api.proto.v1.ErrorCode
 */
export enum ErrorCode {
  /**
   * Default/unknown error
   *
   * @generated from enum value: ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * No data found
   *
   * @generated from enum value: ERROR_CODE_NO_DATA = 1;
   */
  NO_DATA = 1,

  /**
   * Internal server error
   *
   * @generated from enum value: ERROR_CODE_INTERNAL = 2;
   */
  INTERNAL = 2,

  /**
   * Not an aggregator node
   *
   * @generated from enum value: ERROR_CODE_NOT_AGGREGATOR = 3;
   */
  NOT_AGGREGATOR = 3,
}

/**
 * Describes the enum api.proto.v1.ErrorCode.
 */
export const ErrorCodeSchema: GenEnum<ErrorCode> = /*@__PURE__*/
  enumDesc(file_v1_api, 2);

/**
 * SymbioticAPI provides access to the Symbiotic relay functions
 *
 * @generated from service api.proto.v1.SymbioticAPIService
 */
export const SymbioticAPIService: GenService<{
  /**
   * Sign a message
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.SignMessage
   */
  signMessage: {
    methodKind: "unary";
    input: typeof SignMessageRequestSchema;
    output: typeof SignMessageResponseSchema;
  },
  /**
   * Get aggregation proof
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetAggregationProof
   */
  getAggregationProof: {
    methodKind: "unary";
    input: typeof GetAggregationProofRequestSchema;
    output: typeof GetAggregationProofResponseSchema;
  },
  /**
   * Get aggregation proofs by epoch
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetAggregationProofsByEpoch
   */
  getAggregationProofsByEpoch: {
    methodKind: "unary";
    input: typeof GetAggregationProofsByEpochRequestSchema;
    output: typeof GetAggregationProofsByEpochResponseSchema;
  },
  /**
   * Get current epoch
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetCurrentEpoch
   */
  getCurrentEpoch: {
    methodKind: "unary";
    input: typeof GetCurrentEpochRequestSchema;
    output: typeof GetCurrentEpochResponseSchema;
  },
  /**
   * Get signature by request id
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetSignatures
   */
  getSignatures: {
    methodKind: "unary";
    input: typeof GetSignaturesRequestSchema;
    output: typeof GetSignaturesResponseSchema;
  },
  /**
   * Get signature by epoch
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetSignaturesByEpoch
   */
  getSignaturesByEpoch: {
    methodKind: "unary";
    input: typeof GetSignaturesByEpochRequestSchema;
    output: typeof GetSignaturesByEpochResponseSchema;
  },
  /**
   * Get signature request by request id
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetSignatureRequest
   */
  getSignatureRequest: {
    methodKind: "unary";
    input: typeof GetSignatureRequestRequestSchema;
    output: typeof GetSignatureRequestResponseSchema;
  },
  /**
   * Get aggregation status, can be sent only to aggregator nodes
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetAggregationStatus
   */
  getAggregationStatus: {
    methodKind: "unary";
    input: typeof GetAggregationStatusRequestSchema;
    output: typeof GetAggregationStatusResponseSchema;
  },
  /**
   * Get current validator set
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorSet
   */
  getValidatorSet: {
    methodKind: "unary";
    input: typeof GetValidatorSetRequestSchema;
    output: typeof GetValidatorSetResponseSchema;
  },
  /**
   * Get validator by address
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorByAddress
   */
  getValidatorByAddress: {
    methodKind: "unary";
    input: typeof GetValidatorByAddressRequestSchema;
    output: typeof GetValidatorByAddressResponseSchema;
  },
  /**
   * Get validator by key
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorByKey
   */
  getValidatorByKey: {
    methodKind: "unary";
    input: typeof GetValidatorByKeyRequestSchema;
    output: typeof GetValidatorByKeyResponseSchema;
  },
  /**
   * Get local validator
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetLocalValidator
   */
  getLocalValidator: {
    methodKind: "unary";
    input: typeof GetLocalValidatorRequestSchema;
    output: typeof GetLocalValidatorResponseSchema;
  },
  /**
   * Get validator set header
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorSetHeader
   */
  getValidatorSetHeader: {
    methodKind: "unary";
    input: typeof GetValidatorSetHeaderRequestSchema;
    output: typeof GetValidatorSetHeaderResponseSchema;
  },
  /**
   * Get last committed epoch for a specific settlement chain
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetLastCommitted
   */
  getLastCommitted: {
    methodKind: "unary";
    input: typeof GetLastCommittedRequestSchema;
    output: typeof GetLastCommittedResponseSchema;
  },
  /**
   * Get last committed epochs for all settlement chains
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetLastAllCommitted
   */
  getLastAllCommitted: {
    methodKind: "unary";
    input: typeof GetLastAllCommittedRequestSchema;
    output: typeof GetLastAllCommittedResponseSchema;
  },
  /**
   * Get validator set metadata like extra data and request id to fetch aggregation and signature requests
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorSetMetadata
   */
  getValidatorSetMetadata: {
    methodKind: "unary";
    input: typeof GetValidatorSetMetadataRequestSchema;
    output: typeof GetValidatorSetMetadataResponseSchema;
  },
  /**
   * Stream signatures in real-time. If start_epoch is provided, sends historical data first
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.ListenSignatures
   */
  listenSignatures: {
    methodKind: "server_streaming";
    input: typeof ListenSignaturesRequestSchema;
    output: typeof ListenSignaturesResponseSchema;
  },
  /**
   * Stream aggregation proofs in real-time. If start_epoch is provided, sends historical data first
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.ListenProofs
   */
  listenProofs: {
    methodKind: "server_streaming";
    input: typeof ListenProofsRequestSchema;
    output: typeof ListenProofsResponseSchema;
  },
  /**
   * Stream validator set changes in real-time. If start_epoch is provided, sends historical data first
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.ListenValidatorSet
   */
  listenValidatorSet: {
    methodKind: "server_streaming";
    input: typeof ListenValidatorSetRequestSchema;
    output: typeof ListenValidatorSetResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_api, 0);

