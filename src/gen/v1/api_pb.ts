// @generated by protoc-gen-es v2.6.3 with parameter "target=ts"
// @generated from file v1/api.proto (package api.proto.v1, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv2";
import { enumDesc, fileDesc, messageDesc, serviceDesc } from "@bufbuild/protobuf/codegenv2";
import type { Timestamp } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_timestamp } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file v1/api.proto.
 */
export const file_v1_api: GenFile = /*@__PURE__*/
  fileDesc("Cgx2MS9hcGkucHJvdG8SDGFwaS5wcm90by52MSJmChJTaWduTWVzc2FnZVJlcXVlc3QSDwoHa2V5X3RhZxgBIAEoDRIPCgdtZXNzYWdlGAIgASgMEhsKDnJlcXVpcmVkX2Vwb2NoGAMgASgESACIAQFCEQoPX3JlcXVpcmVkX2Vwb2NoImoKFlNpZ25NZXNzYWdlV2FpdFJlcXVlc3QSDwoHa2V5X3RhZxgBIAEoDRIPCgdtZXNzYWdlGAIgASgMEhsKDnJlcXVpcmVkX2Vwb2NoGAMgASgESACIAQFCEQoPX3JlcXVpcmVkX2Vwb2NoIjoKE1NpZ25NZXNzYWdlUmVzcG9uc2USFAoMcmVxdWVzdF9oYXNoGAEgASgJEg0KBWVwb2NoGAIgASgEIsEBChdTaWduTWVzc2FnZVdhaXRSZXNwb25zZRIrCgZzdGF0dXMYASABKA4yGy5hcGkucHJvdG8udjEuU2lnbmluZ1N0YXR1cxIUCgxyZXF1ZXN0X2hhc2gYAiABKAkSDQoFZXBvY2gYAyABKAQSPgoRYWdncmVnYXRpb25fcHJvb2YYBiABKAsyHi5hcGkucHJvdG8udjEuQWdncmVnYXRpb25Qcm9vZkgAiAEBQhQKEl9hZ2dyZWdhdGlvbl9wcm9vZiIyChpHZXRBZ2dyZWdhdGlvblByb29mUmVxdWVzdBIUCgxyZXF1ZXN0X2hhc2gYASABKAkiGAoWR2V0Q3VycmVudEVwb2NoUmVxdWVzdCIaChhHZXRTdWdnZXN0ZWRFcG9jaFJlcXVlc3QiLAoUR2V0U2lnbmF0dXJlc1JlcXVlc3QSFAoMcmVxdWVzdF9oYXNoGAEgASgJIkQKFUdldFNpZ25hdHVyZXNSZXNwb25zZRIrCgpzaWduYXR1cmVzGAEgAygLMhcuYXBpLnByb3RvLnYxLlNpZ25hdHVyZSIyChpHZXRTaWduYXR1cmVSZXF1ZXN0UmVxdWVzdBIUCgxyZXF1ZXN0X2hhc2gYASABKAkiMwobR2V0QWdncmVnYXRpb25TdGF0dXNSZXF1ZXN0EhQKDHJlcXVlc3RfaGFzaBgBIAEoCSI2ChZHZXRWYWxpZGF0b3JTZXRSZXF1ZXN0EhIKBWVwb2NoGAEgASgESACIAQFCCAoGX2Vwb2NoIk0KHEdldFZhbGlkYXRvckJ5QWRkcmVzc1JlcXVlc3QSEgoFZXBvY2gYASABKARIAIgBARIPCgdhZGRyZXNzGAIgASgJQggKBl9lcG9jaCI8ChxHZXRWYWxpZGF0b3JTZXRIZWFkZXJSZXF1ZXN0EhIKBWVwb2NoGAEgASgESACIAQFCCAoGX2Vwb2NoIlgKF0dldEN1cnJlbnRFcG9jaFJlc3BvbnNlEg0KBWVwb2NoGAEgASgEEi4KCnN0YXJ0X3RpbWUYAiABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wIloKGUdldFN1Z2dlc3RlZEVwb2NoUmVzcG9uc2USDQoFZXBvY2gYASABKAQSLgoKc3RhcnRfdGltZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXAiVwobR2V0U2lnbmF0dXJlUmVxdWVzdFJlc3BvbnNlEg8KB2tleV90YWcYASABKA0SDwoHbWVzc2FnZRgCIAEoDBIWCg5yZXF1aXJlZF9lcG9jaBgDIAEoBCJYChtHZXRBZ2dyZWdhdGlvblByb29mUmVzcG9uc2USOQoRYWdncmVnYXRpb25fcHJvb2YYASABKAsyHi5hcGkucHJvdG8udjEuQWdncmVnYXRpb25Qcm9vZiJSChBBZ2dyZWdhdGlvblByb29mEhkKEXZlcmlmaWNhdGlvbl90eXBlGAEgASgNEhQKDG1lc3NhZ2VfaGFzaBgCIAEoDBINCgVwcm9vZhgDIAEoDCJWChxHZXRBZ2dyZWdhdGlvblN0YXR1c1Jlc3BvbnNlEhwKFGN1cnJlbnRfdm90aW5nX3Bvd2VyGAEgASgJEhgKEHNpZ25lcl9vcGVyYXRvcnMYAiADKAkiSAoJU2lnbmF0dXJlEhEKCXNpZ25hdHVyZRgBIAEoDBIUCgxtZXNzYWdlX2hhc2gYAiABKAwSEgoKcHVibGljX2tleRgDIAEoDCKDAgoXR2V0VmFsaWRhdG9yU2V0UmVzcG9uc2USDwoHdmVyc2lvbhgBIAEoDRIYChByZXF1aXJlZF9rZXlfdGFnGAIgASgNEg0KBWVwb2NoGAMgASgEEjUKEWNhcHR1cmVfdGltZXN0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYChBxdW9ydW1fdGhyZXNob2xkGAUgASgJEjAKBnN0YXR1cxgGIAEoDjIgLmFwaS5wcm90by52MS5WYWxpZGF0b3JTZXRTdGF0dXMSKwoKdmFsaWRhdG9ycxgHIAMoCzIXLmFwaS5wcm90by52MS5WYWxpZGF0b3IiSwodR2V0VmFsaWRhdG9yQnlBZGRyZXNzUmVzcG9uc2USKgoJdmFsaWRhdG9yGAEgASgLMhcuYXBpLnByb3RvLnYxLlZhbGlkYXRvciLkAQodR2V0VmFsaWRhdG9yU2V0SGVhZGVyUmVzcG9uc2USDwoHdmVyc2lvbhgBIAEoDRIYChByZXF1aXJlZF9rZXlfdGFnGAIgASgNEg0KBWVwb2NoGAMgASgEEjUKEWNhcHR1cmVfdGltZXN0YW1wGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIYChBxdW9ydW1fdGhyZXNob2xkGAUgASgJEhoKEnRvdGFsX3ZvdGluZ19wb3dlchgGIAEoCRIcChR2YWxpZGF0b3JzX3Nzel9tcm9vdBgHIAEoCSKVAQoJVmFsaWRhdG9yEhAKCG9wZXJhdG9yGAEgASgJEhQKDHZvdGluZ19wb3dlchgCIAEoCRIRCglpc19hY3RpdmUYAyABKAgSHwoEa2V5cxgEIAMoCzIRLmFwaS5wcm90by52MS5LZXkSLAoGdmF1bHRzGAUgAygLMhwuYXBpLnByb3RvLnYxLlZhbGlkYXRvclZhdWx0IiMKA0tleRILCgN0YWcYASABKA0SDwoHcGF5bG9hZBgCIAEoDCJHCg5WYWxpZGF0b3JWYXVsdBIQCghjaGFpbl9pZBgBIAEoBBINCgV2YXVsdBgCIAEoCRIUCgx2b3RpbmdfcG93ZXIYAyABKAkqpQEKElZhbGlkYXRvclNldFN0YXR1cxIkCiBWQUxJREFUT1JfU0VUX1NUQVRVU19VTlNQRUNJRklFRBAAEiAKHFZBTElEQVRPUl9TRVRfU1RBVFVTX0RFUklWRUQQARIjCh9WQUxJREFUT1JfU0VUX1NUQVRVU19BR0dSRUdBVEVEEAISIgoeVkFMSURBVE9SX1NFVF9TVEFUVVNfQ09NTUlUVEVEEAMqoAEKDVNpZ25pbmdTdGF0dXMSHgoaU0lHTklOR19TVEFUVVNfVU5TUEVDSUZJRUQQABIaChZTSUdOSU5HX1NUQVRVU19QRU5ESU5HEAESHAoYU0lHTklOR19TVEFUVVNfQ09NUExFVEVEEAISGQoVU0lHTklOR19TVEFUVVNfRkFJTEVEEAMSGgoWU0lHTklOR19TVEFUVVNfVElNRU9VVBAEKncKCUVycm9yQ29kZRIaChZFUlJPUl9DT0RFX1VOU1BFQ0lGSUVEEAASFgoSRVJST1JfQ09ERV9OT19EQVRBEAESFwoTRVJST1JfQ09ERV9JTlRFUk5BTBACEh0KGUVSUk9SX0NPREVfTk9UX0FHR1JFR0FUT1IQAzL2CAoTU3ltYmlvdGljQVBJU2VydmljZRJSCgtTaWduTWVzc2FnZRIgLmFwaS5wcm90by52MS5TaWduTWVzc2FnZVJlcXVlc3QaIS5hcGkucHJvdG8udjEuU2lnbk1lc3NhZ2VSZXNwb25zZRJqChNHZXRBZ2dyZWdhdGlvblByb29mEiguYXBpLnByb3RvLnYxLkdldEFnZ3JlZ2F0aW9uUHJvb2ZSZXF1ZXN0GikuYXBpLnByb3RvLnYxLkdldEFnZ3JlZ2F0aW9uUHJvb2ZSZXNwb25zZRJeCg9HZXRDdXJyZW50RXBvY2gSJC5hcGkucHJvdG8udjEuR2V0Q3VycmVudEVwb2NoUmVxdWVzdBolLmFwaS5wcm90by52MS5HZXRDdXJyZW50RXBvY2hSZXNwb25zZRJkChFHZXRTdWdnZXN0ZWRFcG9jaBImLmFwaS5wcm90by52MS5HZXRTdWdnZXN0ZWRFcG9jaFJlcXVlc3QaJy5hcGkucHJvdG8udjEuR2V0U3VnZ2VzdGVkRXBvY2hSZXNwb25zZRJYCg1HZXRTaWduYXR1cmVzEiIuYXBpLnByb3RvLnYxLkdldFNpZ25hdHVyZXNSZXF1ZXN0GiMuYXBpLnByb3RvLnYxLkdldFNpZ25hdHVyZXNSZXNwb25zZRJqChNHZXRTaWduYXR1cmVSZXF1ZXN0EiguYXBpLnByb3RvLnYxLkdldFNpZ25hdHVyZVJlcXVlc3RSZXF1ZXN0GikuYXBpLnByb3RvLnYxLkdldFNpZ25hdHVyZVJlcXVlc3RSZXNwb25zZRJtChRHZXRBZ2dyZWdhdGlvblN0YXR1cxIpLmFwaS5wcm90by52MS5HZXRBZ2dyZWdhdGlvblN0YXR1c1JlcXVlc3QaKi5hcGkucHJvdG8udjEuR2V0QWdncmVnYXRpb25TdGF0dXNSZXNwb25zZRJeCg9HZXRWYWxpZGF0b3JTZXQSJC5hcGkucHJvdG8udjEuR2V0VmFsaWRhdG9yU2V0UmVxdWVzdBolLmFwaS5wcm90by52MS5HZXRWYWxpZGF0b3JTZXRSZXNwb25zZRJwChVHZXRWYWxpZGF0b3JCeUFkZHJlc3MSKi5hcGkucHJvdG8udjEuR2V0VmFsaWRhdG9yQnlBZGRyZXNzUmVxdWVzdBorLmFwaS5wcm90by52MS5HZXRWYWxpZGF0b3JCeUFkZHJlc3NSZXNwb25zZRJwChVHZXRWYWxpZGF0b3JTZXRIZWFkZXISKi5hcGkucHJvdG8udjEuR2V0VmFsaWRhdG9yU2V0SGVhZGVyUmVxdWVzdBorLmFwaS5wcm90by52MS5HZXRWYWxpZGF0b3JTZXRIZWFkZXJSZXNwb25zZRJgCg9TaWduTWVzc2FnZVdhaXQSJC5hcGkucHJvdG8udjEuU2lnbk1lc3NhZ2VXYWl0UmVxdWVzdBolLmFwaS5wcm90by52MS5TaWduTWVzc2FnZVdhaXRSZXNwb25zZTABQpkBChBjb20uYXBpLnByb3RvLnYxQghBcGlQcm90b1ABWilnaXRodWIuY29tL3N5bWJpb3RpY2ZpL3JlbGF5L2FwaS9wcm90by92MaICA0FQWKoCDEFwaS5Qcm90by5WMcoCDEFwaVxQcm90b1xWMeICGEFwaVxQcm90b1xWMVxHUEJNZXRhZGF0YeoCDkFwaTo6UHJvdG86OlYxYgZwcm90bzM", [file_google_protobuf_timestamp]);

/**
 * Request message for signing a message
 *
 * @generated from message api.proto.v1.SignMessageRequest
 */
export type SignMessageRequest = Message<"api.proto.v1.SignMessageRequest"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 key_tag = 1;
   */
  keyTag: number;

  /**
   * Message to be signed
   *
   * @generated from field: bytes message = 2;
   */
  message: Uint8Array;

  /**
   * Required epoch (optional, if not provided latest committed epoch will be used)
   *
   * @generated from field: optional uint64 required_epoch = 3;
   */
  requiredEpoch?: bigint;
};

/**
 * Describes the message api.proto.v1.SignMessageRequest.
 * Use `create(SignMessageRequestSchema)` to create a new message.
 */
export const SignMessageRequestSchema: GenMessage<SignMessageRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 0);

/**
 * Request message for signing a message
 *
 * @generated from message api.proto.v1.SignMessageWaitRequest
 */
export type SignMessageWaitRequest = Message<"api.proto.v1.SignMessageWaitRequest"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 key_tag = 1;
   */
  keyTag: number;

  /**
   * Message to be signed
   *
   * @generated from field: bytes message = 2;
   */
  message: Uint8Array;

  /**
   * Required epoch (optional, if not provided latest committed epoch will be used)
   *
   * @generated from field: optional uint64 required_epoch = 3;
   */
  requiredEpoch?: bigint;
};

/**
 * Describes the message api.proto.v1.SignMessageWaitRequest.
 * Use `create(SignMessageWaitRequestSchema)` to create a new message.
 */
export const SignMessageWaitRequestSchema: GenMessage<SignMessageWaitRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 1);

/**
 * Response message for sign message request
 *
 * @generated from message api.proto.v1.SignMessageResponse
 */
export type SignMessageResponse = Message<"api.proto.v1.SignMessageResponse"> & {
  /**
   * Hash of the signature request
   *
   * @generated from field: string request_hash = 1;
   */
  requestHash: string;

  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 2;
   */
  epoch: bigint;
};

/**
 * Describes the message api.proto.v1.SignMessageResponse.
 * Use `create(SignMessageResponseSchema)` to create a new message.
 */
export const SignMessageResponseSchema: GenMessage<SignMessageResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 2);

/**
 * Streaming response message for sign message wait
 *
 * @generated from message api.proto.v1.SignMessageWaitResponse
 */
export type SignMessageWaitResponse = Message<"api.proto.v1.SignMessageWaitResponse"> & {
  /**
   * Current status of the signing process
   *
   * @generated from field: api.proto.v1.SigningStatus status = 1;
   */
  status: SigningStatus;

  /**
   * Hash of the signature request
   *
   * @generated from field: string request_hash = 2;
   */
  requestHash: string;

  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 3;
   */
  epoch: bigint;

  /**
   * Final aggregation proof (only set when status is SIGNING_STATUS_COMPLETED)
   *
   * @generated from field: optional api.proto.v1.AggregationProof aggregation_proof = 6;
   */
  aggregationProof?: AggregationProof;
};

/**
 * Describes the message api.proto.v1.SignMessageWaitResponse.
 * Use `create(SignMessageWaitResponseSchema)` to create a new message.
 */
export const SignMessageWaitResponseSchema: GenMessage<SignMessageWaitResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 3);

/**
 * Request message for getting aggregation proof
 *
 * @generated from message api.proto.v1.GetAggregationProofRequest
 */
export type GetAggregationProofRequest = Message<"api.proto.v1.GetAggregationProofRequest"> & {
  /**
   * Request hash
   *
   * @generated from field: string request_hash = 1;
   */
  requestHash: string;
};

/**
 * Describes the message api.proto.v1.GetAggregationProofRequest.
 * Use `create(GetAggregationProofRequestSchema)` to create a new message.
 */
export const GetAggregationProofRequestSchema: GenMessage<GetAggregationProofRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 4);

/**
 * Request message for getting current epoch
 *
 * @generated from message api.proto.v1.GetCurrentEpochRequest
 */
export type GetCurrentEpochRequest = Message<"api.proto.v1.GetCurrentEpochRequest"> & {
};

/**
 * Describes the message api.proto.v1.GetCurrentEpochRequest.
 * Use `create(GetCurrentEpochRequestSchema)` to create a new message.
 */
export const GetCurrentEpochRequestSchema: GenMessage<GetCurrentEpochRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 5);

/**
 * Request message for getting suggested epoch
 *
 * @generated from message api.proto.v1.GetSuggestedEpochRequest
 */
export type GetSuggestedEpochRequest = Message<"api.proto.v1.GetSuggestedEpochRequest"> & {
};

/**
 * Describes the message api.proto.v1.GetSuggestedEpochRequest.
 * Use `create(GetSuggestedEpochRequestSchema)` to create a new message.
 */
export const GetSuggestedEpochRequestSchema: GenMessage<GetSuggestedEpochRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 6);

/**
 * Request message for getting signatures
 *
 * @generated from message api.proto.v1.GetSignaturesRequest
 */
export type GetSignaturesRequest = Message<"api.proto.v1.GetSignaturesRequest"> & {
  /**
   * Request hash
   *
   * @generated from field: string request_hash = 1;
   */
  requestHash: string;
};

/**
 * Describes the message api.proto.v1.GetSignaturesRequest.
 * Use `create(GetSignaturesRequestSchema)` to create a new message.
 */
export const GetSignaturesRequestSchema: GenMessage<GetSignaturesRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 7);

/**
 * Response message for getting signatures
 *
 * @generated from message api.proto.v1.GetSignaturesResponse
 */
export type GetSignaturesResponse = Message<"api.proto.v1.GetSignaturesResponse"> & {
  /**
   * List of signatures
   *
   * @generated from field: repeated api.proto.v1.Signature signatures = 1;
   */
  signatures: Signature[];
};

/**
 * Describes the message api.proto.v1.GetSignaturesResponse.
 * Use `create(GetSignaturesResponseSchema)` to create a new message.
 */
export const GetSignaturesResponseSchema: GenMessage<GetSignaturesResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 8);

/**
 * Request message for getting signature request
 *
 * @generated from message api.proto.v1.GetSignatureRequestRequest
 */
export type GetSignatureRequestRequest = Message<"api.proto.v1.GetSignatureRequestRequest"> & {
  /**
   * Request hash
   *
   * @generated from field: string request_hash = 1;
   */
  requestHash: string;
};

/**
 * Describes the message api.proto.v1.GetSignatureRequestRequest.
 * Use `create(GetSignatureRequestRequestSchema)` to create a new message.
 */
export const GetSignatureRequestRequestSchema: GenMessage<GetSignatureRequestRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 9);

/**
 * Request message for getting aggregation status
 *
 * @generated from message api.proto.v1.GetAggregationStatusRequest
 */
export type GetAggregationStatusRequest = Message<"api.proto.v1.GetAggregationStatusRequest"> & {
  /**
   * Request hash
   *
   * @generated from field: string request_hash = 1;
   */
  requestHash: string;
};

/**
 * Describes the message api.proto.v1.GetAggregationStatusRequest.
 * Use `create(GetAggregationStatusRequestSchema)` to create a new message.
 */
export const GetAggregationStatusRequestSchema: GenMessage<GetAggregationStatusRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 10);

/**
 * Request message for getting validator set
 *
 * @generated from message api.proto.v1.GetValidatorSetRequest
 */
export type GetValidatorSetRequest = Message<"api.proto.v1.GetValidatorSetRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetRequest.
 * Use `create(GetValidatorSetRequestSchema)` to create a new message.
 */
export const GetValidatorSetRequestSchema: GenMessage<GetValidatorSetRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 11);

/**
 * Request message for getting validator by address
 *
 * @generated from message api.proto.v1.GetValidatorByAddressRequest
 */
export type GetValidatorByAddressRequest = Message<"api.proto.v1.GetValidatorByAddressRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;

  /**
   * Validator address (required)
   *
   * @generated from field: string address = 2;
   */
  address: string;
};

/**
 * Describes the message api.proto.v1.GetValidatorByAddressRequest.
 * Use `create(GetValidatorByAddressRequestSchema)` to create a new message.
 */
export const GetValidatorByAddressRequestSchema: GenMessage<GetValidatorByAddressRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 12);

/**
 * Request message for getting validator set header
 *
 * @generated from message api.proto.v1.GetValidatorSetHeaderRequest
 */
export type GetValidatorSetHeaderRequest = Message<"api.proto.v1.GetValidatorSetHeaderRequest"> & {
  /**
   * Epoch number (optional, if not provided current epoch will be used)
   *
   * @generated from field: optional uint64 epoch = 1;
   */
  epoch?: bigint;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetHeaderRequest.
 * Use `create(GetValidatorSetHeaderRequestSchema)` to create a new message.
 */
export const GetValidatorSetHeaderRequestSchema: GenMessage<GetValidatorSetHeaderRequest> = /*@__PURE__*/
  messageDesc(file_v1_api, 13);

/**
 * Response message for getting current epoch
 *
 * @generated from message api.proto.v1.GetCurrentEpochResponse
 */
export type GetCurrentEpochResponse = Message<"api.proto.v1.GetCurrentEpochResponse"> & {
  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 1;
   */
  epoch: bigint;

  /**
   * Epoch start time
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message api.proto.v1.GetCurrentEpochResponse.
 * Use `create(GetCurrentEpochResponseSchema)` to create a new message.
 */
export const GetCurrentEpochResponseSchema: GenMessage<GetCurrentEpochResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 14);

/**
 * Response message for getting suggested epoch
 *
 * @generated from message api.proto.v1.GetSuggestedEpochResponse
 */
export type GetSuggestedEpochResponse = Message<"api.proto.v1.GetSuggestedEpochResponse"> & {
  /**
   * Epoch number
   *
   * @generated from field: uint64 epoch = 1;
   */
  epoch: bigint;

  /**
   * Epoch start time
   *
   * @generated from field: google.protobuf.Timestamp start_time = 2;
   */
  startTime?: Timestamp;
};

/**
 * Describes the message api.proto.v1.GetSuggestedEpochResponse.
 * Use `create(GetSuggestedEpochResponseSchema)` to create a new message.
 */
export const GetSuggestedEpochResponseSchema: GenMessage<GetSuggestedEpochResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 15);

/**
 * Response message for getting signature request
 *
 * @generated from message api.proto.v1.GetSignatureRequestResponse
 */
export type GetSignatureRequestResponse = Message<"api.proto.v1.GetSignatureRequestResponse"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 key_tag = 1;
   */
  keyTag: number;

  /**
   * Message to be signed
   *
   * @generated from field: bytes message = 2;
   */
  message: Uint8Array;

  /**
   * Required epoch
   *
   * @generated from field: uint64 required_epoch = 3;
   */
  requiredEpoch: bigint;
};

/**
 * Describes the message api.proto.v1.GetSignatureRequestResponse.
 * Use `create(GetSignatureRequestResponseSchema)` to create a new message.
 */
export const GetSignatureRequestResponseSchema: GenMessage<GetSignatureRequestResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 16);

/**
 * Response message for getting aggregation proof
 *
 * @generated from message api.proto.v1.GetAggregationProofResponse
 */
export type GetAggregationProofResponse = Message<"api.proto.v1.GetAggregationProofResponse"> & {
  /**
   * @generated from field: api.proto.v1.AggregationProof aggregation_proof = 1;
   */
  aggregationProof?: AggregationProof;
};

/**
 * Describes the message api.proto.v1.GetAggregationProofResponse.
 * Use `create(GetAggregationProofResponseSchema)` to create a new message.
 */
export const GetAggregationProofResponseSchema: GenMessage<GetAggregationProofResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 17);

/**
 * Response message for getting aggregation proof
 *
 * @generated from message api.proto.v1.AggregationProof
 */
export type AggregationProof = Message<"api.proto.v1.AggregationProof"> & {
  /**
   * Verification type
   *
   * @generated from field: uint32 verification_type = 1;
   */
  verificationType: number;

  /**
   * Message hash
   *
   * @generated from field: bytes message_hash = 2;
   */
  messageHash: Uint8Array;

  /**
   * Proof data
   *
   * @generated from field: bytes proof = 3;
   */
  proof: Uint8Array;
};

/**
 * Describes the message api.proto.v1.AggregationProof.
 * Use `create(AggregationProofSchema)` to create a new message.
 */
export const AggregationProofSchema: GenMessage<AggregationProof> = /*@__PURE__*/
  messageDesc(file_v1_api, 18);

/**
 * Response message for getting aggregation status
 *
 * @generated from message api.proto.v1.GetAggregationStatusResponse
 */
export type GetAggregationStatusResponse = Message<"api.proto.v1.GetAggregationStatusResponse"> & {
  /**
   * Current voting power of the aggregator (big integer as string)
   *
   * @generated from field: string current_voting_power = 1;
   */
  currentVotingPower: string;

  /**
   * List of operator addresses that signed the request
   *
   * @generated from field: repeated string signer_operators = 2;
   */
  signerOperators: string[];
};

/**
 * Describes the message api.proto.v1.GetAggregationStatusResponse.
 * Use `create(GetAggregationStatusResponseSchema)` to create a new message.
 */
export const GetAggregationStatusResponseSchema: GenMessage<GetAggregationStatusResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 19);

/**
 * Digital signature
 *
 * @generated from message api.proto.v1.Signature
 */
export type Signature = Message<"api.proto.v1.Signature"> & {
  /**
   * Signature data
   *
   * @generated from field: bytes signature = 1;
   */
  signature: Uint8Array;

  /**
   * Message hash
   *
   * @generated from field: bytes message_hash = 2;
   */
  messageHash: Uint8Array;

  /**
   * Public key
   *
   * @generated from field: bytes public_key = 3;
   */
  publicKey: Uint8Array;
};

/**
 * Describes the message api.proto.v1.Signature.
 * Use `create(SignatureSchema)` to create a new message.
 */
export const SignatureSchema: GenMessage<Signature> = /*@__PURE__*/
  messageDesc(file_v1_api, 20);

/**
 * Response message for getting validator set
 *
 * @generated from message api.proto.v1.GetValidatorSetResponse
 */
export type GetValidatorSetResponse = Message<"api.proto.v1.GetValidatorSetResponse"> & {
  /**
   * Version of the validator set
   *
   * @generated from field: uint32 version = 1;
   */
  version: number;

  /**
   * Key tag required to commit next validator set
   *
   * @generated from field: uint32 required_key_tag = 2;
   */
  requiredKeyTag: number;

  /**
   * Validator set epoch
   *
   * @generated from field: uint64 epoch = 3;
   */
  epoch: bigint;

  /**
   * Epoch capture timestamp
   *
   * @generated from field: google.protobuf.Timestamp capture_timestamp = 4;
   */
  captureTimestamp?: Timestamp;

  /**
   * Quorum threshold (big integer as string)
   *
   * @generated from field: string quorum_threshold = 5;
   */
  quorumThreshold: string;

  /**
   * Status of validator set header
   *
   * @generated from field: api.proto.v1.ValidatorSetStatus status = 6;
   */
  status: ValidatorSetStatus;

  /**
   * List of validators
   *
   * @generated from field: repeated api.proto.v1.Validator validators = 7;
   */
  validators: Validator[];
};

/**
 * Describes the message api.proto.v1.GetValidatorSetResponse.
 * Use `create(GetValidatorSetResponseSchema)` to create a new message.
 */
export const GetValidatorSetResponseSchema: GenMessage<GetValidatorSetResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 21);

/**
 * Response message for getting validator by address
 *
 * @generated from message api.proto.v1.GetValidatorByAddressResponse
 */
export type GetValidatorByAddressResponse = Message<"api.proto.v1.GetValidatorByAddressResponse"> & {
  /**
   * The validator
   *
   * @generated from field: api.proto.v1.Validator validator = 1;
   */
  validator?: Validator;
};

/**
 * Describes the message api.proto.v1.GetValidatorByAddressResponse.
 * Use `create(GetValidatorByAddressResponseSchema)` to create a new message.
 */
export const GetValidatorByAddressResponseSchema: GenMessage<GetValidatorByAddressResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 22);

/**
 * Response message for getting validator set header
 *
 * @generated from message api.proto.v1.GetValidatorSetHeaderResponse
 */
export type GetValidatorSetHeaderResponse = Message<"api.proto.v1.GetValidatorSetHeaderResponse"> & {
  /**
   * Version of the validator set
   *
   * @generated from field: uint32 version = 1;
   */
  version: number;

  /**
   * Key tag required to commit next validator set
   *
   * @generated from field: uint32 required_key_tag = 2;
   */
  requiredKeyTag: number;

  /**
   * Validator set epoch
   *
   * @generated from field: uint64 epoch = 3;
   */
  epoch: bigint;

  /**
   * Epoch capture timestamp
   *
   * @generated from field: google.protobuf.Timestamp capture_timestamp = 4;
   */
  captureTimestamp?: Timestamp;

  /**
   * Quorum threshold (big integer as string)
   *
   * @generated from field: string quorum_threshold = 5;
   */
  quorumThreshold: string;

  /**
   * Total voting power (big integer as string)
   *
   * @generated from field: string total_voting_power = 6;
   */
  totalVotingPower: string;

  /**
   * Validators SSZ Merkle root (hex string)
   *
   * @generated from field: string validators_ssz_mroot = 7;
   */
  validatorsSszMroot: string;
};

/**
 * Describes the message api.proto.v1.GetValidatorSetHeaderResponse.
 * Use `create(GetValidatorSetHeaderResponseSchema)` to create a new message.
 */
export const GetValidatorSetHeaderResponseSchema: GenMessage<GetValidatorSetHeaderResponse> = /*@__PURE__*/
  messageDesc(file_v1_api, 23);

/**
 * Validator information
 *
 * @generated from message api.proto.v1.Validator
 */
export type Validator = Message<"api.proto.v1.Validator"> & {
  /**
   * Operator address (hex string)
   *
   * @generated from field: string operator = 1;
   */
  operator: string;

  /**
   * Voting power of the validator (big integer as string)
   *
   * @generated from field: string voting_power = 2;
   */
  votingPower: string;

  /**
   * Indicates if the validator is active
   *
   * @generated from field: bool is_active = 3;
   */
  isActive: boolean;

  /**
   * List of cryptographic keys
   *
   * @generated from field: repeated api.proto.v1.Key keys = 4;
   */
  keys: Key[];

  /**
   * List of validator vaults
   *
   * @generated from field: repeated api.proto.v1.ValidatorVault vaults = 5;
   */
  vaults: ValidatorVault[];
};

/**
 * Describes the message api.proto.v1.Validator.
 * Use `create(ValidatorSchema)` to create a new message.
 */
export const ValidatorSchema: GenMessage<Validator> = /*@__PURE__*/
  messageDesc(file_v1_api, 24);

/**
 * Cryptographic key
 *
 * @generated from message api.proto.v1.Key
 */
export type Key = Message<"api.proto.v1.Key"> & {
  /**
   * Key tag identifier (0-127)
   *
   * @generated from field: uint32 tag = 1;
   */
  tag: number;

  /**
   * Key payload
   *
   * @generated from field: bytes payload = 2;
   */
  payload: Uint8Array;
};

/**
 * Describes the message api.proto.v1.Key.
 * Use `create(KeySchema)` to create a new message.
 */
export const KeySchema: GenMessage<Key> = /*@__PURE__*/
  messageDesc(file_v1_api, 25);

/**
 * Validator vault information
 *
 * @generated from message api.proto.v1.ValidatorVault
 */
export type ValidatorVault = Message<"api.proto.v1.ValidatorVault"> & {
  /**
   * Chain identifier
   *
   * @generated from field: uint64 chain_id = 1;
   */
  chainId: bigint;

  /**
   * Vault address
   *
   * @generated from field: string vault = 2;
   */
  vault: string;

  /**
   * Voting power for this vault (big integer as string)
   *
   * @generated from field: string voting_power = 3;
   */
  votingPower: string;
};

/**
 * Describes the message api.proto.v1.ValidatorVault.
 * Use `create(ValidatorVaultSchema)` to create a new message.
 */
export const ValidatorVaultSchema: GenMessage<ValidatorVault> = /*@__PURE__*/
  messageDesc(file_v1_api, 26);

/**
 * Validator set status enumeration
 *
 * @generated from enum api.proto.v1.ValidatorSetStatus
 */
export enum ValidatorSetStatus {
  /**
   * Default/unknown status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Derived status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_DERIVED = 1;
   */
  DERIVED = 1,

  /**
   * Aggregated status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_AGGREGATED = 2;
   */
  AGGREGATED = 2,

  /**
   * Committed status
   *
   * @generated from enum value: VALIDATOR_SET_STATUS_COMMITTED = 3;
   */
  COMMITTED = 3,
}

/**
 * Describes the enum api.proto.v1.ValidatorSetStatus.
 */
export const ValidatorSetStatusSchema: GenEnum<ValidatorSetStatus> = /*@__PURE__*/
  enumDesc(file_v1_api, 0);

/**
 * Signing process status enumeration
 *
 * @generated from enum api.proto.v1.SigningStatus
 */
export enum SigningStatus {
  /**
   * Default/unknown status
   *
   * @generated from enum value: SIGNING_STATUS_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Request has been created and is waiting for signatures
   *
   * @generated from enum value: SIGNING_STATUS_PENDING = 1;
   */
  PENDING = 1,

  /**
   * Signing process completed successfully with proof
   *
   * @generated from enum value: SIGNING_STATUS_COMPLETED = 2;
   */
  COMPLETED = 2,

  /**
   * Signing process failed
   *
   * @generated from enum value: SIGNING_STATUS_FAILED = 3;
   */
  FAILED = 3,

  /**
   * Signing request timed out
   *
   * @generated from enum value: SIGNING_STATUS_TIMEOUT = 4;
   */
  TIMEOUT = 4,
}

/**
 * Describes the enum api.proto.v1.SigningStatus.
 */
export const SigningStatusSchema: GenEnum<SigningStatus> = /*@__PURE__*/
  enumDesc(file_v1_api, 1);

/**
 * Error code enumeration
 *
 * @generated from enum api.proto.v1.ErrorCode
 */
export enum ErrorCode {
  /**
   * Default/unknown error
   *
   * @generated from enum value: ERROR_CODE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * No data found
   *
   * @generated from enum value: ERROR_CODE_NO_DATA = 1;
   */
  NO_DATA = 1,

  /**
   * Internal server error
   *
   * @generated from enum value: ERROR_CODE_INTERNAL = 2;
   */
  INTERNAL = 2,

  /**
   * Not an aggregator node
   *
   * @generated from enum value: ERROR_CODE_NOT_AGGREGATOR = 3;
   */
  NOT_AGGREGATOR = 3,
}

/**
 * Describes the enum api.proto.v1.ErrorCode.
 */
export const ErrorCodeSchema: GenEnum<ErrorCode> = /*@__PURE__*/
  enumDesc(file_v1_api, 2);

/**
 * SymbioticAPI provides access to the Symbiotic relay functions
 *
 * @generated from service api.proto.v1.SymbioticAPIService
 */
export const SymbioticAPIService: GenService<{
  /**
   * Sign a message
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.SignMessage
   */
  signMessage: {
    methodKind: "unary";
    input: typeof SignMessageRequestSchema;
    output: typeof SignMessageResponseSchema;
  },
  /**
   * Get aggregation proof
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetAggregationProof
   */
  getAggregationProof: {
    methodKind: "unary";
    input: typeof GetAggregationProofRequestSchema;
    output: typeof GetAggregationProofResponseSchema;
  },
  /**
   * Get current epoch
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetCurrentEpoch
   */
  getCurrentEpoch: {
    methodKind: "unary";
    input: typeof GetCurrentEpochRequestSchema;
    output: typeof GetCurrentEpochResponseSchema;
  },
  /**
   * Get suggested epoch to request sign
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetSuggestedEpoch
   */
  getSuggestedEpoch: {
    methodKind: "unary";
    input: typeof GetSuggestedEpochRequestSchema;
    output: typeof GetSuggestedEpochResponseSchema;
  },
  /**
   * Get signature by request hash
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetSignatures
   */
  getSignatures: {
    methodKind: "unary";
    input: typeof GetSignaturesRequestSchema;
    output: typeof GetSignaturesResponseSchema;
  },
  /**
   * Get signature request by request hash
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetSignatureRequest
   */
  getSignatureRequest: {
    methodKind: "unary";
    input: typeof GetSignatureRequestRequestSchema;
    output: typeof GetSignatureRequestResponseSchema;
  },
  /**
   * Get aggregation status, can be sent only to aggregator nodes
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetAggregationStatus
   */
  getAggregationStatus: {
    methodKind: "unary";
    input: typeof GetAggregationStatusRequestSchema;
    output: typeof GetAggregationStatusResponseSchema;
  },
  /**
   * Get current validator set
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorSet
   */
  getValidatorSet: {
    methodKind: "unary";
    input: typeof GetValidatorSetRequestSchema;
    output: typeof GetValidatorSetResponseSchema;
  },
  /**
   * Get validator by address
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorByAddress
   */
  getValidatorByAddress: {
    methodKind: "unary";
    input: typeof GetValidatorByAddressRequestSchema;
    output: typeof GetValidatorByAddressResponseSchema;
  },
  /**
   * Get validator set header
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.GetValidatorSetHeader
   */
  getValidatorSetHeader: {
    methodKind: "unary";
    input: typeof GetValidatorSetHeaderRequestSchema;
    output: typeof GetValidatorSetHeaderResponseSchema;
  },
  /**
   * Sign a message and wait for aggregation proof via stream
   *
   * @generated from rpc api.proto.v1.SymbioticAPIService.SignMessageWait
   */
  signMessageWait: {
    methodKind: "server_streaming";
    input: typeof SignMessageWaitRequestSchema;
    output: typeof SignMessageWaitResponseSchema;
  },
}> = /*@__PURE__*/
  serviceDesc(file_v1_api, 0);

